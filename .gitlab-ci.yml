image: docker:stable

stages:
  - validate
  - build-base
  - build

# Temporary fix for https://gitlab.com/gitlab-org/gitlab-ce/issues/64959
variables:
  DOCKER_TLS_CERTDIR: ""

dockerfile_lint:
  stage: validate
  image: hadolint/hadolint:latest-debian
  script:
    - hadolint generic/Dockerfile
    - hadolint generic/Dockerfile.legacy.colcon
    - hadolint generic/Dockerfile.legacy.catkin
    - hadolint generic/Dockerfile.base
    - hadolint generic/Dockerfile.cuda.kinetic
    - hadolint generic/Dockerfile.cuda.melodic
    - hadolint crossbuild/Dockerfile.kinetic-crossbuild
    - hadolint crossbuild/Dockerfile.kinetic-crossbuild-driveworks
    - hadolint crossbuild/Dockerfile.melodic-crossbuild
    - hadolint crossbuild/Dockerfile.melodic-crossbuild-driveworks

.base_script: &base_script
  services:
    - docker:dind
  before_script:
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - sed -i 's/\/bin\/bash/\/bin\/sh/g' generic/build.sh
    - cd generic
    # Build base image
    - ./build.sh -b -c off -i $IMAGE_NAME -r $ROS_DISTRO -t $TAG_PREFIX -v $VERSION

.cross_script: &cross_script
  services:
    - docker:dind
  before_script:
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - sed -i 's/\/bin\/bash/\/bin\/sh/g' crossbuild/build_cross_image.sh
    - cd crossbuild
    # Build cross-compile image
    - ./build_cross_image.sh -p $TARGET_PLATFORM -r $ROS_DISTRO -t $TAG_SUFFIX

.cross_vars: &cross_vars
    IMAGE_NAME: autoware/build
    DOCKER_ARCH: arm64v8
    TARGET_ARCH: aarch64
    TARGET_PLATFORM: generic-aarch64

.autoware_included_script: &autoware_included_script
  services:
    - docker:dind
  before_script:
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - sed -i 's/\/bin\/bash/\/bin\/sh/g' generic/build.sh
    - cp dependencies generic/
    - cd generic
    # Build src-included image
    - ./build.sh -c off -i $IMAGE_NAME -r $ROS_DISTRO -t $TAG_PREFIX -v $VERSION

nightly_melodic:
  stage: build-base
  variables:
    IMAGE_NAME: autoware/autoware
    ROS_DISTRO: melodic
    TAG_PREFIX: bleedingedge
    VERSION: master
  << : *base_script
  script:
    # Build CUDA variant
    - ./build.sh -b -i $IMAGE_NAME -r $ROS_DISTRO -t $TAG_PREFIX -v $VERSION
    # Push images
    - docker push $IMAGE_NAME:$TAG_PREFIX-$ROS_DISTRO-base
    - docker push $IMAGE_NAME:$TAG_PREFIX-$ROS_DISTRO-base-cuda
  only:
    - schedules
    - web

nightly_melodic_aarch64_native:
  tags:
    - arm64
  stage: build-base
  variables:
    IMAGE_NAME: autoware/arm64v8
    ROS_DISTRO: melodic
    TAG_PREFIX: bleedingedge
    VERSION: master
  <<: *base_script
  script:
    # Push image
    - docker push $IMAGE_NAME:$TAG_PREFIX-$ROS_DISTRO-base
  only:
    - schedules
    - web

nightly_melodic_aarch64_cross:
  stage: build-base
  variables:
    << : *cross_vars
    ROS_DISTRO: melodic
    TAG_SUFFIX: bleedingedge
  << : *cross_script
  script:
    # Push image
    - docker push $IMAGE_NAME:$TARGET_PLATFORM-$ROS_DISTRO-$TAG_SUFFIX
  only:
    - schedules
    - web

release_melodic_base:
  stage: build-base
  variables:
    IMAGE_NAME: autoware/autoware
    ROS_DISTRO: melodic
    TAG_PREFIX: $CI_COMMIT_TAG
    VERSION: $CI_COMMIT_TAG
  << : *base_script
  script:
    # Build CUDA variant
    - ./build.sh -b -i $IMAGE_NAME -r $ROS_DISTRO -t $TAG_PREFIX -v $VERSION
    # Tag with latest
    - docker tag $IMAGE_NAME:$TAG_PREFIX-$ROS_DISTRO-base $IMAGE_NAME:latest-$ROS_DISTRO-base
    - docker tag $IMAGE_NAME:$TAG_PREFIX-$ROS_DISTRO-base-cuda $IMAGE_NAME:latest-$ROS_DISTRO-base-cuda
    # Push images
    - docker push $IMAGE_NAME:$TAG_PREFIX-$ROS_DISTRO-base
    - docker push $IMAGE_NAME:$TAG_PREFIX-$ROS_DISTRO-base-cuda
    - docker push $IMAGE_NAME:latest-$ROS_DISTRO-base
    - docker push $IMAGE_NAME:latest-$ROS_DISTRO-base-cuda
  only:
    - tags
    - /^[0-9]+\.[0-9]+\.[0-9]+.*$/

release_melodic_base_aarch64_native:
  stage: build-base
  variables:
    IMAGE_NAME: autoware/arm64v8
    ROS_DISTRO: melodic
    TAG_PREFIX: $CI_COMMIT_TAG
    VERSION: $CI_COMMIT_TAG
  << : *base_script
  script:
    # Tag with latest
    - docker tag $IMAGE_NAME:$TAG_PREFIX-$ROS_DISTRO-base $IMAGE_NAME:latest-$ROS_DISTRO-base
    # Push images
    - docker push $IMAGE_NAME:$TAG_PREFIX-$ROS_DISTRO-base
    - docker push $IMAGE_NAME:latest-$ROS_DISTRO-base
  only:
    - tags
    - /^[0-9]+\.[0-9]+\.[0-9]+.*$/

release_melodic:
  stage: build
  dependencies:
    - release_melodic_base
  variables:
    IMAGE_NAME: autoware/autoware
    ROS_DISTRO: melodic
    TAG_PREFIX: $CI_COMMIT_TAG
    VERSION: $CI_COMMIT_TAG
  << : *autoware_included_script
  script:
    # Build CUDA variant
    - ./build.sh -i $IMAGE_NAME -r $ROS_DISTRO -t $TAG_PREFIX -v $VERSION
    # Tag with latest
    - docker tag $IMAGE_NAME:$TAG_PREFIX-$ROS_DISTRO $IMAGE_NAME:latest-$ROS_DISTRO
    - docker tag $IMAGE_NAME:$TAG_PREFIX-$ROS_DISTRO-cuda $IMAGE_NAME:latest-$ROS_DISTRO-cuda
    # Push images
    - docker push $IMAGE_NAME:$TAG_PREFIX-$ROS_DISTRO
    - docker push $IMAGE_NAME:$TAG_PREFIX-$ROS_DISTRO-cuda
    - docker push $IMAGE_NAME:latest-$ROS_DISTRO
    - docker push $IMAGE_NAME:latest-$ROS_DISTRO-cuda
  only:
    - tags
    - /^[0-9]+\.[0-9]+\.[0-9]+.*$/

release_melodic_aarch64_native:
  stage: build
  dependencies:
    - release_melodic_base_aarch64_native
  variables:
    IMAGE_NAME: autoware/arm64v8
    ROS_DISTRO: melodic
    TAG_PREFIX: $CI_COMMIT_TAG
    VERSION: $CI_COMMIT_TAG
  << : *autoware_included_script
  script:
    # Push images
    - docker push $IMAGE_NAME:$TAG_PREFIX-$ROS_DISTRO
    - docker push $IMAGE_NAME:latest-$ROS_DISTRO
  only:
    - tags
    - /^[0-9]+\.[0-9]+\.[0-9]+.*$/

release_melodic_aarch64_cross:
  stage: build-base
  variables:
    << : *cross_vars
    ROS_DISTRO: melodic
    TAG_SUFFIX: $CI_COMMIT_TAG
  << : *cross_script
  script:
    # Tag with latest
    - docker tag $IMAGE_NAME:$TARGET_PLATFORM-$ROS_DISTRO-$TAG_SUFFIX $IMAGE_NAME:$TARGET_PLATFORM-$ROS_DISTRO-latest
    # Push image
    - docker push $IMAGE_NAME:$TARGET_PLATFORM-$ROS_DISTRO-$TAG_SUFFIX
    - docker push $IMAGE_NAME:$TARGET_PLATFORM-$ROS_DISTRO-latest
  only:
    - tags
    - /^[0-9]+\.[0-9]+\.[0-9]+.*$/
